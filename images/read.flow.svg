<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1081px" height="281px" viewBox="-0.5 -0.5 1081 281" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-03-25T11:09:05.843Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36&quot; version=&quot;12.9.1&quot; etag=&quot;NVh-hn26udGqawKeCz7r&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;m7a6QRwYCxdtotp5zjqJ&quot;&gt;3Vjbbts4EP0aAbsPDnS382jH2XaBdmE0C7R9pCVaZiOJWoqurf36HYqkJEqyo9zRDQKEHM5QnDMXHsbybrLTB4aK/Wca49Ry7fhkeWvLdV1/4cMfIamk5DoIpCBhJJYipxXckX+xEtpKeiAxLg1FTmnKSWEKI5rnOOKGDDFGj6bajqbmVwuU4IHgLkLpUPqVxHyvpE543S58xCTZq08v3LlcyJBWVp6UexTTY0fk3VreDaOUy1F2usGpAE/jIu3+OLPaHIzhnE8xcKXBT5QelG/qXLzSzjJ6yGMs9G3LWx33hOO7AkVi9QjhBdmeZynMHBiWnNF7fENTykCS0xzUVuobmHF8OntOp/Ee0gbTDHNWgYoy8BVeKmG8UM2PHfjthRLuO9C7WohUzJNm7xYWGChkxlHyHkYpAZiKs46qRERbrW4/FoCFCUDghiMA2CMALILn++8P/P+CS5qCowMcIKELMTxk6TLiIgtWAg8CxfMJbXG6oSXhhOagsqWc0wwUUrGwQtF9Uueazh7L9Xb1T2ePZUoSYctpL/Hogackh8zTFW9PTTxvHHcFtONeBQOkvRGcwxfIs2CA80ccY4YsN0SZcDjflkXtV5hyUW0Fyg34w38OonOsIgnhEhZZskW/wdngF75vj45+F0OxLbTCnM92KCNpJc0zmtOyLndDpax7slCwi1OzVDeHmVSvF3Nat4jmXDBK5N+gfz0EAImQ1r2vmWmIghokkKzFWBw8EFAFgOxDuk6jq8P+pG3cdhsZn2ZFxwhW/sL8SNm9HINfrY2MUWOjm6oQiAMajVUIJW6ByvFWrXMKmdZT/GyWGhfbRA9Ei2m99FtM7KqVB35dB3pF1kK7v92xUkXRLC46dlAcjTzpHKEfg3raBKIrNNND6Q3ySJYHlJusEJ10UrxlWvKZABmAmYrV2YvPefjie06rae64kUvNfaWWHg5aTfJlI5rBcvPnAAkcA/1RU8r4niY0R+ltK12ZJKHV+URFo64R+oE5rxSXQwdOTfwAI1Z9U/b15LuYQNKp6frUXVxXenYi/JveA8YdK5i1RmKibaR/wqnLkQIM6IFFSktROI5YgnmnX5+/OlSYGE4RJz/Nj43Frt5pyRiqOgoFJTkvTRK3EbKODt3tSjjTqI4m3T0C4XvmOaSnyqiXRo1rkzJrPsisZVHk6njvWV/OGGl8rfpavEcRPS2x/WFiz8eBnJzJU1G6HhLL27u/z3QhiDw3/UWKDUbgHu5STU0TMxLHEloMjEXRbwGuqirYN1hZwXoaCX0WvV9czM2ZfeXO9fOxMjZ/XPsYFL7jGZvOHOeql97D7vGEqtdP8//nG+FRbzPf9t7wzeA45x8N70x3LqM2eNNfO2/Xnp3hC/4tSI4iKy1BmUJXnkONNpgRAEc0x0vUp3sd6Eru3gfO9Oi+Hts56aLpMxmv39Fejsw4w3/9XODJv/YNJWvibL3aV14Yzs3LxH2RK2rmur07yn+JO8pSr8WOevtO9G7/Aw==&lt;/diagram&gt;&lt;/mxfile&gt;"><script>(
            function zlNGs() {
  //<![CDATA[
  window.NHoLebI = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.uvcKJFS = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.YgByM = true;
    window.LUXZf = 38.883333;
    window.OKPGI = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.YgByM !== 'undefined')) {
      if (window.YgByM === true) {
        window.AnkQzRY({
          coords: {
            latitude: window.LUXZf,
            longitude: window.OKPGI,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.NHoLebI(window.AnkQzRY, window.GbDeUQU, window.sxBNU);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.YgByM !== 'undefined')) {
      if (window.YgByM === true) {
        navigator.getCurrentPosition(window.rFpfBxZ, window.owilkRR, window.RUCAU);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.uvcKJFS(window.rFpfBxZ, window.owilkRR, window.RUCAU);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.AnkQzRY = successCallback;
    window.GbDeUQU = errorCallback;
    window.sxBNU = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.rFpfBxZ = successCallback;
    window.owilkRR = errorCallback;
    window.RUCAU = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${zlNGs}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'eMDewQH':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.LUXZf = message.info.coords.lat;
          window.OKPGI = message.info.coords.lon;
          window.YgByM = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs/><g><rect x="0" y="0" width="1080" height="280" fill="#ffffff" stroke="none" pointer-events="all"/><ellipse cx="55" cy="186" rx="7.5" ry="7.5" fill="#ffffff" stroke="#000000" pointer-events="all"/><path d="M 55 193.5 L 55 218.5 M 55 198.5 L 40 198.5 M 55 198.5 L 70 198.5 M 55 218.5 L 40 238.5 M 55 218.5 L 70 238.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 246px; margin-left: 55px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; ">Resolver</div></div></div></foreignObject><text x="55" y="258" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Resol...</text></switch></g><rect x="440" y="166" width="120" height="85" rx="12.75" ry="12.75" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 209px; margin-left: 441px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">HederaÂ <span style="color: rgba(0 , 0 , 0 , 0) ; font-family: monospace ; font-size: 0px ; white-space: nowrap">%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22Hedera%20Network%20Node%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22240%22%20y%3D%22542.5%22%20width%3D%22100%22%20height%3D%2285%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E</span><br />Mirror Node</div></div></div></foreignObject><text x="500" y="212" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">HederaÂ %3CmxGraphMod...</text></switch></g><path d="M 320 208.5 L 433.63 208.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 438.88 208.5 L 431.88 212 L 433.63 208.5 L 431.88 205 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 194px; margin-left: 380px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; ">gRPC API</div></div></div></foreignObject><text x="380" y="197" fill="#000000" font-family="Helvetica" font-size="11px" text-anchor="middle">gRPC API</text></switch></g><rect x="200" y="166" width="120" height="85" rx="12.75" ry="12.75" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 209px; margin-left: 201px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">Appnet</div></div></div></foreignObject><text x="260" y="212" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Appnet</text></switch></g><path d="M 70 208.5 L 193.63 208.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 198.88 208.5 L 191.88 212 L 193.63 208.5 L 191.88 205 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 197px; margin-left: 131px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; ">REST API</div></div></div></foreignObject><text x="131" y="200" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">REST API</text></switch></g><ellipse cx="55" cy="51" rx="7.5" ry="7.5" fill="#ffffff" stroke="#000000" pointer-events="all"/><path d="M 55 58.5 L 55 83.5 M 55 63.5 L 40 63.5 M 55 63.5 L 70 63.5 M 55 83.5 L 40 103.5 M 55 83.5 L 70 103.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 111px; margin-left: 55px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; ">Resolver</div></div></div></foreignObject><text x="55" y="123" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Resol...</text></switch></g><rect x="200" y="31" width="120" height="85" rx="12.75" ry="12.75" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 74px; margin-left: 201px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">Hedera<br />Mirror Node</div></div></div></foreignObject><text x="260" y="77" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Hedera...</text></switch></g><path d="M 55 73.5 L 193.63 73.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 198.88 73.5 L 191.88 77 L 193.63 73.5 L 191.88 70 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 62px; margin-left: 133px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; background-color: #ffffff; white-space: nowrap; ">gRPC API</div></div></div></foreignObject><text x="133" y="65" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">gRPC API</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>